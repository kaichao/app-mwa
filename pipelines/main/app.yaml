name: main.app-mwa
label: mwa-comput-${NUM_POINTINGS_PER_CALC}
cluster: ${CLUSTER}
parameters:
  initial_status: RUNNING
  message_router: message-router-main

jobs:
  dir-list:
    base_image: hub.cstcloud.cn/scalebox/dir-list
    cluster: ${CLUSTER_LOCAL}
    parameters:
      slot_on_head: yes
    environments:
      - REGEX_FILTER=${REGEX_FILTER}
      # - REGEX_2D_DATASET=${REGEX_DAT}
      # - INDEX_2D_DATASET=${INDEX_DAT}

  cluster-tar-pull:
    base_image: hub.cstcloud.cn/scalebox/rsync-copy
    cluster: ${CLUSTER_LOCAL}
    variables:
      task_timeout_seconds: 1800
    parameters:
      # user@host/remote-path~1257010784/1257010786_1257010815_ch109.dat.tar.zst~/data/mwa/tar
      key_group_regex: ${REGEX_TAR}
      key_group_index: 1,2,3
    hosts:
      - h0:2

  local-tar-pull:
    # keep source file controlled by message-router
    base_image: ${RSYNC_COPY}
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      # /raid0/scalebox/mydata/mwa/tar~1257010784/1257010786_1257010815_ch114.dat.tar.zst~/dev/shm/scalebox/mydata/mwa/tar
      key_group_regex: ^.+~([0-9]+)/([0-9]+_[0-9]+)_ch([0-9]+).+$
      key_group_index: 1,2,3
    variables:
      task_timeout_seconds: 1800
      dir_limit_gb: /dev/shm/scalebox/mydata/mwa/tar~10
    environments:
      - LOCAL_OUTPUT_ROOT=${LOCAL_SHM_ROOT}
      - JUMP_SERVERS=${JUMP_SERVERS}
    hosts:
      -  ${NODES}:1

  unpack:
    base_image: ${SCALEBOX_AGENT}
    # node1上的文件读取错误，需设置特权权限。可能更新该节点上docker到最新版本可解决该问题
    command: ${UNPACK_COMMAND}
    variables:
      task_timeout_seconds: ${UNPACK_TIMEOUT}
      dir_limit_gb: ${UNPACK_DIR_LIMIT_GB}
      code_path: ${CODE_BASE}/dockerfiles/unpack/code
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      # 1257010784/1257010816_1257010845_ch113.dat.tar.zst~1257010786_1257010845
      key_group_regex: ${REGEX_TAR}
      key_group_index: 1,3,2
#      key_group_index: 1,2,3
    environments:
      - LOCAL_INPUT_ROOT=${LOCAL_SHM_ROOT}
      - LOCAL_OUTPUT_ROOT=${LOCAL_DISK_ROOT}
      - KEEP_SOURCE_FILE=no
    hosts:
      - ${NODES}:1

  beam-maker:
    label: beam-maker
    base_image: ${MWA_VCSTOOLS}
    command: ${ROCM_COMMAND}
    variables:
      task_timeout_seconds: ${BEAM_MAKER_TIMEOUT}
      code_path: ${CODE_BASE}/dockerfiles/mwa-vcstools/beam-maker/code
      # output_text_size: 1048576
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      slot_timeout_seconds: 60
      # 1257010784/1257010786_1257010845/109/00001_00024
      key_group_regex: ^([0-9]+)/([0-9]+_[0-9]+)/([0-9]{3})/[0-9]{5}_[0-9]{5}$
      key_group_index: 1,2,3
    environments:
      - LOCAL_INPUT_ROOT=${LOCAL_DISK_ROOT}
      - LOCAL_CAL_ROOT=${LOCAL_SHM_ROOT}
      - LOCAL_OUTPUT_ROOT=${LOCAL_SHM_ROOT}
      # 通常无KEEP_SOURCE_FILE设置，由信号量统一管理何时删除原始文件，仅压力测试时需使用
    hosts:
      - ${NODES}:4

  down-sampler:
    base_image: ${DOWN_SAMPLER}
    variables:
      task_timeout_seconds: ${DOWN_SAMPLER_TIMEOUT}
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      slot_timeout_seconds: 60
      # 1257010784/p00166/t1257010786_1257010845/ch117.fits
      key_group_regex: ^([0-9]+)/p([0-9]+)/t([0-9]+_[0-9]+)/ch([0-9]{3}).fits$
      key_group_index: 1,2,3
    environments:
      - KEEP_SOURCE_FILE=no
      - LOCAL_INPUT_ROOT=${LOCAL_SHM_ROOT}
      - LOCAL_OUTPUT_ROOT=${LOCAL_SHM_ROOT}
    hosts:
      - ${NODES}:1

  # push 
  fits-redist:
    base_image: ${RSYNC_COPY}
    variables:
      task_timeout_seconds: 60
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      slot_timeout_seconds: 60
      # /scalebox/mydata/mwa/1chx~1257010784/p00088/t1257010786_1257010845/ch119.fits.zst~root@10.11.16.79/dev/shm/scalebox/mydata/mwa/1chx
      key_group_regex: ^.+~([0-9]+)/p([0-9]+)/t([0-9]+_[0-9]+)/ch([0-9]{3}).fits.zst~.+$
      key_group_index: 1,2,3
    environments:
      - KEEP_SOURCE_FILE=no
    hosts:
      - ${NODES}:1

  fits-merger:
    label: 24通道fits合并
    base_image: ${MWA_VCSTOOLS}
    variables:
      task_timeout_seconds: ${FITS_MERGER_TIMEOUT}
      code_path: ${CODE_BASE}/dockerfiles/mwa-vcstools/fits-merger/code
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      # 1257010784/1257010786_1257010795/00001
      # 1257010784/p00097/t1257010786_1257010845
      key_group_regex: ^([0-9]+)/p([0-9]{5})/t([0-9]+_[0-9]+)$
      key_group_index: 1,3,2
    environments:
      - KEEP_SOURCE_FILE=${KEEP_SOURCE_FILE}
      - LOCAL_INPUT_ROOT=${LOCAL_SHM_ROOT}
      - LOCAL_OUTPUT_ROOT=${LOCAL_SHM_ROOT}
    hosts:
      - ${NODES}:1

  fits-24ch-push:
    base_image: ${RSYNC_COPY}
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      # /dev/shm/scalebox/mydata/mwa/24ch~1257010784/p00016/t1257010786_1257010845.fits.zst~scalebox@159.226.237.136/raid0/scalebox/mydata/mwa/24ch
      key_group_regex: ^.+~([0-9]+)/p([0-9]{5})/t([0-9]+_[0-9]+)~.+$
      key_group_index: 1,3,2
    variables:
      task_timeout_seconds: 1800
    environments:
      - KEEP_SOURCE_FILE=no
      - JUMP_SERVERS=${JUMP_SERVERS}
    hosts:
      -  ${NODES}:1

  presto-search:
    label: presto-search
    base_image: ${PRESTO_SEARCH}
    command: ${ROCM_COMMAND}
    variables:
      task_timeout_seconds: ${PRESTO_SEARCH_TIMEOUT}
      output_text_size: 1048576
      code_path: ${CODE_BASE}/dockerfiles/presto-search/code
    parameters:
      task_dist_mode: ${TASK_DIST_MODE}
      # 1257010784/p00001
    environments:
      - KEEP_SOURCE_FILE=${KEEP_SOURCE_FILE}
      - LOCAL_INPUT_ROOT=${LOCAL_SHM_ROOT}
      - LOCAL_OUTPUT_ROOT=${LOCAL_SHM_ROOT}
    hosts:
      - ${NODES}:2

  message-router-main:
    label: 主消息路由
    base_image: app-mwa/message-router-go
    cluster: ${CLUSTER_LOCAL}
    parameters:
      slot_on_head: yes
      key_group_regex:
      key_group_index:
      start_message: ${DATASET_URI}
      visiable: no
    environments:
      # - NUM_PER_GROUP=${NUM_PER_GROUP}
      - LOG_LEVEL=warn
      - LOCAL_MODE=${LOCAL_MODE}
      - NUM_NODES_PER_GROUP=
      # 指向起始号
      # - POINTING_BEGIN=${POINTING_BEGIN}
      # 指向结束号
      # - POINTING_END=${POINTING_END}
      # 单次计算的指向数
      # - NUM_POINTINGS_PER_CALC=${NUM_POINTINGS_PER_CALC}
      # 单次计算的数据时长（秒数）
      # - NUM_SECONDS_PER_CALC=${NUM_SECONDS_PER_CALC}
      # 设置JUMP_SERVERS，则远端tar也通过local-tar-pull直接获取
      - JUMP_SERVERS=${JUMP_SERVERS}
      # - TRACE=yes
    sink_jobs:
      - dir-list
      - cluster-tar-pull
      - local-tar-pull
      - unpack
      - beam-maker
      - down-sampler
      - fits-redist
      - fits-merger
